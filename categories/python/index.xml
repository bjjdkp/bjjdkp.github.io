<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on bjjdkp的博客</title>
    <link>https://bjjdkp.github.io/categories/python/</link>
    <description>Recent content in Python on bjjdkp的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bjjdkp.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 直接赋值、浅拷贝和深拷贝</title>
      <link>https://bjjdkp.github.io/post/copy-and-deepcopy/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bjjdkp.github.io/post/copy-and-deepcopy/</guid>
      <description>总是混淆python中的赋值、浅拷贝和深拷贝的概念，写一篇笔记加强理解。 先上结论： 赋值：其实就是原对象多了一个引用。 浅拷贝(copy)：只拷</description>
    </item>
    
    <item>
      <title>Scrapy 设置中 CONCURRENT_REQUESTS 及 DOWNLOAD_DELAY 等几个相关参数的作用</title>
      <link>https://bjjdkp.github.io/post/concurrent_requests-and-download_delay/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bjjdkp.github.io/post/concurrent_requests-and-download_delay/</guid>
      <description>Scrapy设置中，关于并发及下载延迟是几个比较关键的参数，既影响着请求效率，同时关乎对方服务器的压力大小。 相关的几个参数： CONCURRENT_REQUESTS 默认值：16 S</description>
    </item>
    
    <item>
      <title>使用 fabric 自动化部署项目</title>
      <link>https://bjjdkp.github.io/post/fabric-deploy/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bjjdkp.github.io/post/fabric-deploy/</guid>
      <description>本文基于 Python3 和 fabric2，记录关于 fabric 自动化部署项目的基本语法。 fabric 不同版本间的区别 在 pypi 中搜索 fabric 能搜到三个相关的库： Fabric 和 fabric2： 同为官</description>
    </item>
    
    <item>
      <title>Django 中 makemigrations 和 migrate 区别</title>
      <link>https://bjjdkp.github.io/post/difference-between-makemigrations-and-migrate/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bjjdkp.github.io/post/difference-between-makemigrations-and-migrate/</guid>
      <description>偶然间看到了关于 Django 中 makemigrations 和 migrate 区别的一段解释，豁然开朗。 According the Polls tutorial： 1.python manage.py makemigrations &amp;lt;app&amp;gt;: Create the migrations (generate the SQL commands). 2.python manage.py migrate: Run the migrations (execute the SQL commands).</description>
    </item>
    
  </channel>
</rss>